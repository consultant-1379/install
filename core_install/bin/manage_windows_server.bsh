#!/bin/bash
# ********************************************************************
# Ericsson Radio Systems AB                                     SCRIPT
# ********************************************************************
#
# (c) Ericsson Radio Systems AB 2019 - All rights reserved.
#
# The copyright to the computer program(s) herein is the property
# of Ericsson Radio Systems AB, Sweden. The programs may be used
# and/or copied only with the written permission from Ericsson Radio
# Systems AB or in accordance with the terms and conditions stipulated
# in the agreement/contract under which the program(s) have been
# supplied.
#
# ********************************************************************
# Name    : manage_windows_server.bsh
# Date    : 12/10/2023
# Revision: \main\4
# Purpose : Main wrapper script for creating files with windows server's IPs
#           required for Data collection of windows server by DDC.
#
# Usage   : manage_windows_server.bsh
#
# ********************************************************************
#
#   Command Section
#
# ********************************************************************

ECHO=/usr/bin/echo
MKDIR=/usr/bin/mkdir
RM=/usr/bin/rm
TOUCH=/usr/bin/touch
TR=/usr/bin/tr
WC=/usr/bin/wc

output_file_location=/eniq/installation/config
WINDOWS_SERVER_CONF_DIR="${output_file_location}/windows_server_conf_files"

if [ ! -d ${WINDOWS_SERVER_CONF_DIR} ]; then
    $MKDIR -p ${WINDOWS_SERVER_CONF_DIR}
    if [ $? -ne 0 ]; then
        $ECHO -e "\nFailed to create directory ${WINDOWS_SERVER_CONF_DIR}"
    fi
fi

$ECHO -e "\nWindows Server is Configured or not? [y/n] : \c"
read input

case ${input} in
    [yY])

    while true
    do
        $ECHO -e "\nEnter type of Windows Server [BIS/NETAN/OCS-WITHOUT-CITRIX] : \c"
        read input
        if [[ ${input} = "BIS" || ${input} = "bis" || ${input} = "ocs-without-citrix" || ${input} = "OCS-WITHOUT-CITRIX" || ${input} = "NETAN"|| ${input} = "netan" ]]; then
            windows_server_type=$($ECHO "${input}" | $TR '[[:lower:]]' '[[:upper:]]')
            $ECHO -e "\nEnter IP Address of Windows Server : \c"
            read input
            if [[ ${input} =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
                IFS='.'
                input=($input)
                if [[ ${input[0]} -le 255 && ${input[1]} -le 255 && ${input[2]} -le 255 && ${input[3]} -le 255 ]]; then
                    count_file=`ls -1 ${WINDOWS_SERVER_CONF_DIR}/${windows_server_type}-* 2>/dev/null | $WC -l`
                    if [ ${count_file} != 0 ]; then
                        $RM -rf ${WINDOWS_SERVER_CONF_DIR}/${windows_server_type}-*
                        $TOUCH ${WINDOWS_SERVER_CONF_DIR}/${windows_server_type}-${input[0]}.${input[1]}.${input[2]}.${input[3]}
                    else
                        $TOUCH ${WINDOWS_SERVER_CONF_DIR}/${windows_server_type}-${input[0]}.${input[1]}.${input[2]}.${input[3]}
                    fi

                else
                    $ECHO -e "\nInvalid IP Address"
                fi
            elif [[ ${input} =~ ^([0-9a-fA-F]{0,4}:){1,7}[0-9a-fA-F]{0,4}$ ]]; then
                count_file=`ls -1 ${WINDOWS_SERVER_CONF_DIR}/${windows_server_type}-* 2>/dev/null | $WC -l`
                if [ ${count_file} != 0 ]; then
                    $RM -rf ${WINDOWS_SERVER_CONF_DIR}/${windows_server_type}-*
                    $TOUCH ${WINDOWS_SERVER_CONF_DIR}/${windows_server_type}-${input}
                else
                    $TOUCH ${WINDOWS_SERVER_CONF_DIR}/${windows_server_type}-${input}
                fi
            else
                $ECHO -e "\nInvalid IP Address"
            fi
        else
            $ECHO -e "\nEnter the valid type of Windows Server"
        fi

        $ECHO -e "\nDo you wish to continue again to provide other Windows Server information? [y/n] : \c"
        read input

        case ${input} in
            [yY])
            continue
        ;;
            [nN])
            $ECHO -e " "
                        ls -1 ${WINDOWS_SERVER_CONF_DIR}
                        $ECHO -e "\nAre you sure all the provided Windows Server information is correct? [y/n] : \c"
                        read input
                        case ${input} in
                [yY])
                $ECHO -e " "
                break
            ;;
                            [nN])
                $ECHO -e " "
                continue
                        ;;
                            *)
                $ECHO -e "\nInvalid input..."
                break
            ;;
            esac
        ;;
            *)
            $ECHO -e "\nInvalid input..."
            break
        ;;
        esac
    done
    ;;
        [nN])
        $ECHO -e "\nWindows Server is not configured, get it configured first.\n"
    ;;
        *)
        $ECHO -e "\nInvalid input..."
        exit 1
    ;;
esac


